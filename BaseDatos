package es.studium.Farmacia;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class BaseDatos
{
	String driver = "com.mysql.cj.jdbc.Driver"; 
	String url = "jdbc:mysql://localhost:3306/farmacia_pr"; 
	String login = "farmacia"; // Usuario MySQL
	String password = "Studium2021;"; // Su clave correspondiente
	String sentencia = "";
	Connection connection = null; 
	Statement statement = null;

	public BaseDatos()
	{

	}

	public void conectar()
	{
		try
		{
			//Cargar los controladores para el acceso a la BD
			Class.forName(driver);
			//Establecer la conexión con la BD Empresa
			connection = DriverManager.getConnection(url, login, password);
		}
		catch (ClassNotFoundException cnfe)
		{}
		catch (SQLException sqle)
		{}
	}

	public int consultar(String sentencia)
	{
		int resultado = -1;
		ResultSet rs = null;
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			//Crear un objeto ResultSet para guardar lo obtenido
			//y ejecutar la sentencia SQL
			rs = statement.executeQuery(sentencia);
			if(rs.next()) // Si hay, al menos uno
			{
				resultado = rs.getInt("tipoUsuario");
			}
		}
		catch (SQLException sqle)
		{}
		return resultado;
	}

	public String consultarClientes()
	{
		String contenido = "";
		ResultSet rs = null;
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			//Crear un objeto ResultSet para guardar lo obtenido
			//y ejecutar la sentencia SQL
			rs = statement.executeQuery("SELECT * FROM clientes");
			while(rs.next()) // Si hay, al menos uno
			{
				contenido = contenido + rs.getInt("idCliente") +
						" "+ rs.getString("dniCliente") + " " +
						rs.getString("nombreCliente") + " " +
						rs.getString("apellidosCliente") + " " +
						rs.getString("domicilioCliente") + " " +
						rs.getString("telefonoCliente") + " " +
						rs.getString("poblacionCliente") + " " +
						rs.getString("correoElectronicoCliente") + "\n";
			}
		}
		catch (SQLException sqle)
		{}
		return(contenido);
	}

	public int insertarCliente(String sentencia)
	{
		int resultado = 0; // Éxito
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			// Ejecutar el INSERT
			statement.executeUpdate(sentencia);
		}
		catch (SQLException sqle)
		{
			resultado = -1; // Error
		}
		return(resultado);
	}

	public ResultSet rellenarClientes()
	{
		ResultSet rs = null;
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			// Ejecutar el SELECT
			rs = statement.executeQuery("SELECT * FROM clientes");
		}
		catch (SQLException sqle)
		{}
		return (rs);
	}

	public int borrarCliente(int idCliente)
	{
		int resultado = 0;
		// Devolver un 0 --> Borrado éxito
		// Devolver un -1 --> Borrado error
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			// Ejecutar el DELETE
			String sentencia = "DELETE FROM clientes WHERE idCliente="+idCliente;
			statement.executeUpdate(sentencia);
		}
		catch (SQLException sqle)
		{
			resultado = -1; // Error
		}
		return(resultado);
	}

	public ResultSet consultarCliente(String idCliente)
	{
		ResultSet rs = null;
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			// Ejecutar el SELECT
			rs = statement.executeQuery("SELECT * FROM clientes WHERE idCliente = "+idCliente);
		}
		catch (SQLException sqle)
		{
			System.out.println(sqle.getMessage());
		}
		return (rs);
	}

	public int actualizarCliente(String idCliente, String dniNuevo, String nombreNuevo, String apellidosNuevo, 
			String domicilioNuevo, String telefonoNuevo, String poblacionNuevo, String correoNuevo)
	{
		int resultado = 0;
		String sentencia = "UPDATE clientes SET apellidosCliente='"+dniNuevo+"', nombreCliente = '"+nombreNuevo+"',"
				+ "apellidosCliente='"+apellidosNuevo+"', domicilioCliente='"+domicilioNuevo+"', "
						+ "telefonoCliente='"+telefonoNuevo+"', poblacionCliente='"+poblacionNuevo+"',"
								+ "correoElectronicoCliente='"+correoNuevo+"'  WHERE idCliente = " + idCliente;
		// Devolver un 0 --> Modificación con éxito
		// Devolver un -1 --> Modificación error
		try
		{
			//Crear una sentencia
			statement = connection.createStatement();
			// Ejecutar el UPDATE
			statement.executeUpdate(sentencia);
		}
		catch (SQLException sqle)
		{
			resultado = -1; // Error
		}
		return(resultado);
	}

	public void desconectar()
	{
		try
		{
			if(connection!=null)
			{
				connection.close();
			}
		}
		catch (SQLException e)
		{}
	}
}
