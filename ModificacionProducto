package es.studium.Farmacia;

import java.awt.Button;
import java.awt.Choice;
import java.awt.Dialog;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Label;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.ResultSet;
import java.sql.SQLException;

public class ModificacionProducto implements WindowListener, ActionListener 
{
	// Componentes
	Frame ventana = new Frame("Modificación de Producto");
	Label lblCabecera = new Label("Elegir el Producto a Modificar:");
	Choice choProductos = new Choice();
	Button btnEditar = new Button("Editar");

	Dialog dlgEditar = new Dialog(ventana, "Edición Producto", true);
	Label lblCabecera2 = new Label("Editando el producto nº ");
	Label lblCodigoProducto = new Label("Código Producto:");
	Label lblDescripcion = new Label("Descripción:");
	Label lblPrecio = new Label("Precio:");
	Label lblCantidad = new Label("Cantidad:");
	TextField txtCodigoProducto = new TextField(15);
	TextField txtDescripcion = new TextField(15);
	TextField txtPrecio = new TextField(15);
	TextField txtCantidad = new TextField(15);
	Button btnModificar = new Button("Modificar");
	Button btnCancelar = new Button("Cancelar");

	Dialog dlgMensaje = new Dialog(ventana, "Mensaje", true);
	Label lblMensaje = new Label("XXXXXXXXXXXXXX");

	String usuario;
	BaseDatos bd = new BaseDatos();
	ResultSet rs = null;

	public ModificacionProducto(int tipoUsuario)
	{
		if (tipoUsuario==0) {
			usuario="basico";
			
		}
		else {
			usuario="administrador";
		}
		// Listener
		ventana.addWindowListener(this);
		btnEditar.addActionListener(this);
		btnModificar.addActionListener(this);
		btnCancelar.addActionListener(this);
		dlgEditar.addWindowListener(this);
		dlgMensaje.addWindowListener(this);

		// Pantalla
		ventana.setSize(530, 150); // En pixeles Width, Height. Ir probando y cambiando anchura y altura
		ventana.setResizable(false); // No Permitir redimensionar

		ventana.setLayout(new FlowLayout());
		ventana.add(lblCabecera);
		rellenarChoiceProductos();
		ventana.add(choProductos);
		ventana.add(btnEditar);

		ventana.setLocationRelativeTo(null); //fijar que la ventana salga siempre en el medio
		ventana.setVisible(true); // Mostrarla
	}
	private void rellenarChoiceProductos() 
	{
		choProductos.removeAll();
		// Rellenar Choice
		choProductos.add("Elegir Producto...");
		// Conectar BD
		bd.conectar();
		// Sacar los datos de la tabla Productos
		rs=bd.rellenarProductos();
		// Registro a registro, meterlos en el Choice
		try 
		{
			while(rs.next())
			{
				choProductos.add(rs.getInt("codigoProducto")+"-"+
						rs.getString("descripcionProducto")+ "-" +
						rs.getString("precioProducto")+ "-" +
						rs.getString("cantidadProducto"));
			}
		} 
		catch (SQLException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// Desconectar BD
		bd.desconectar();
	}
	public void windowActivated(WindowEvent we) {}
	public void windowClosed(WindowEvent we) {}
	public void windowClosing(WindowEvent we)
	{
		if(dlgMensaje.isActive())
		{
			dlgMensaje.setVisible(false);
		}
		else if(dlgEditar.isActive())
		{
			dlgEditar.setVisible(false);
		}
		else
		{
			ventana.setVisible(false);
		}
	}
	public void windowDeactivated(WindowEvent we) {}
	public void windowDeiconified(WindowEvent we) {}
	public void windowIconified(WindowEvent we) {}
	public void windowOpened(WindowEvent we) {}

	@Override
	public void actionPerformed(ActionEvent evento) 
	{
		if(evento.getSource().equals(btnEditar))
		{
			if(!choProductos.getSelectedItem().equals("Elegir Producto..."))
			{
				String[] seleccionado = choProductos.getSelectedItem().split("-");
				// Conectar BD y sacar los datos del producto seleccionado
				bd.conectar();
				rs = bd.consultarProducto(seleccionado[0]);
				try
				{
					rs.next();
					txtDescripcion.setText(rs.getString("descripcionProducto"));
					txtPrecio.setText(rs.getString("precioProducto"));
					txtCantidad.setText(rs.getString("cantidadProducto"));
				}
				catch(SQLException sqle) {}
				bd.desconectar();
				// Muestro los datos del producto elegido
				// en la pantalla de edición
				dlgEditar.setSize(170, 570); // En pixeles Width, Height. Ir probando y cambiando anchura y altura
				dlgEditar.setResizable(false); // No Permitir redimensionar

				dlgEditar.setLayout(new FlowLayout());
				dlgEditar.add(lblCabecera2);
				dlgEditar.add(lblCodigoProducto);
				txtCodigoProducto.setEnabled(false);
				txtCodigoProducto.setText(seleccionado[0]); // rs.getInt("CodigoProducto");
				dlgEditar.add(txtCodigoProducto);

				dlgEditar.add(lblDescripcion);
				dlgEditar.add(txtDescripcion);

				dlgEditar.add(lblPrecio);
				dlgEditar.add(txtPrecio);

				dlgEditar.add(lblCantidad);
				dlgEditar.add(txtCantidad);
				
				dlgEditar.add(btnModificar);
				dlgEditar.add(btnCancelar);

				dlgEditar.setLocationRelativeTo(null);
				dlgEditar.setVisible(true);
			}
		}
		else if(evento.getSource().equals(btnModificar))
		{
			bd.conectar();
			int resultado = bd.actualizarProducto(txtCodigoProducto.getText(), txtDescripcion.getText(),txtPrecio.getText(), 
					txtCantidad.getText());
			bd.desconectar();
			rellenarChoiceProductos();

			if(resultado == 0)
			{
				lblMensaje.setText("Modificación Correcta");
				bd.escritura("["+usuario+"]"+"[Modificación: UPDATE productos SET]");
			}
			else
			{
				lblMensaje.setText("Error en Modificación");
			}
			dlgMensaje.setSize(180,75);
			dlgMensaje.setLayout(new FlowLayout());
			dlgMensaje.setResizable(false);
			dlgMensaje.add(lblMensaje);
			dlgMensaje.setLocationRelativeTo(null);
			dlgMensaje.setVisible(true);
		}
		else if(evento.getSource().equals(btnCancelar))
		{
			dlgEditar.setVisible(false);
		}
	}
}
